## From https://towardsdatascience.com/making-llms-write-better-and-better-code-for-self-driving-using-langprop-99c6c3dc9508
## From https://github.com/shuishida/LangProp/tree/main

LangProp is a framework developed to optimize code using large language models (LLMs) like ChatGPT, particularly in the domain of autonomous driving.

1. Motivation and Challenges
   LangProp aims to leverage LLMs for generating and optimizing driving code, despite challenges such as the computational demands of LLMs and the need for real-time performance
   in autonomous driving applications.
   While LLMs excel in high-level reasoning and natural language tasks, their adaptation to precise spatial control and real-time decision-making in driving tasks poses significant challenges.

2. Framework Overview
   -1. Code Generation and Optimization: LangProp uses LLMs to iteratively generate and refine driving code. 
       This process includes
       -1) Bug Detection and Correction
           Automatic detection and correction of bugs in the generated code using LLM capabilities.
       -2) Objective Function Optimization
           Defining and optimizing an objective function that guides LLMs to improve model parameters (code) based on specified metrics relevant to driving tasks.

3. Integration of Symbolic AI and Machine Learning
   -1. LangProp integrates principles from symbolic AI and modern machine learning
       -1) Symbolic AI
           Traditionally relies on logic and human-defined rules for modeling complex systems.
       -2) Machine Learning
           Utilizes data-driven approaches to learn from large datasets.
    -2. By combining these approaches, LangProp allows LLMs to automate and optimize symbolic systems like those required 
        for autonomous driving without relying solely on explicit human programming.

4. Application to Autonomous Driving
   -1. CARLA Simulation
       LangProp is tested and validated in simulations using CARLA, a widely-used platform for autonomous driving research.
   -2. Iterative Refinement
       Initial driving policies generated by LLMs often exhibit issues like causal confusion in imitation learning. Techniques such as DAgger (Dataset Aggregation)
       and reinforcement learning are employed to refine these policies over iterations.
   -3. Performance Evaluation
       LangProp aims to improve driving policies iteratively, enhancing safety, efficiency, and adaptability in varying driving conditions.

5. Conclusion
   LangProp represents a pioneering approach in using LLMs to optimize software systems, specifically tailored for the complexities and safety requirements of autonomous driving.
   By automating code generation and refinement through iterative learning processes, LangProp aims to advance the capabilities of autonomous driving systems
   towards greater reliability and performance in real-world applications.
